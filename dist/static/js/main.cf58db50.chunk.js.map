{"version":3,"sources":["config/fbConfig.js","reducers/authReducer.js","reducers/employeeReducer.js","store/reducer.js","components/privateRoute/index.js","components/navigation/signedInLinks.js","actions/authActions.js","components/navigation/signedOutLinks.js","components/navigation/index.js","components/employeesList/fieldMariedRender.js","components/employeesList/fieldBirthdayRender.js","components/employeesList/fieldSalaryRender.js","components/employeesList/fieldExperienceRender.js","components/notification/index.js","actions/employeeActions.js","components/employeesList/fieldToolsRender.js","const/columnDefs.js","components/employeesList/index.js","const/validationSchema.js","components/auth/signIn.js","components/auth/signUp.js","components/employeeCreator/index.js","components/employeeUpdater/index.js","app.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","initState","authError","authReducer","state","action","type","console","log","error","message","employees","employeeReducer","payload","rootReducer","combineReducers","auth","firestoreReducer","firebaseReducer","connect","Component","component","rest","render","uid","to","profile","dispatch","signOut","getState","getFirebase","then","props","className","onClick","initials","SignedOutLinks","links","FieldMariedRender","maried","valueMaried","this","value","style","display","alignItems","justifyContent","Icon","color","FieldBirthdayRender","params","format","toDate","FieldSalaryRender","FieldExperienceRender","formatedDate","formatDistanceToNow","Date","notification","iziToast","success","title","FieldToolsRender","handleClear","id","data","removeEmployee","Button","size","columnDefs","headerName","field","sortable","filter","resizable","cellRendererFramework","getFirestore","collection","doc","delete","catch","forwardRef","EmployeesList","width","height","reactNext","onGridReady","api","sizeColumnsToFit","setGridAutoHeight","rowData","compose","ordered","firestoreConnect","validationSchemaSignIn","Yup","shape","email","required","password","min","validationSchemaSignUp","name","max","surname","validationSchemaMain","dateOfEmployment","salary","birthday","profession","SignIn","handleSubmit","values","signIn","initialValues","validationSchema","onSubmit","errors","touched","onChange","onBlur","TextField","label","margin","variant","creds","credentials","signInWithEmailAndPassword","SignUp","signUp","newUser","createUserWithEmailAndPassword","resp","user","set","EmployeeCreator","employee","employeeId","createEmployee","updateEmployee","history","push","checkAuth","createdBy","btnTitle","form","MuiPickersUtilsProvider","utils","DateFnsUtils","autoOk","maxDate","initialFocusedDate","setFieldValue","setFieldTouched","KeyboardButtonProps","FormControl","Select","displayEmpty","MenuItem","disabled","checked","FormControlLabel","control","Checkbox","add","update","withRouter","ownProps","match","path","exact","EmployeeUpdater","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","attachAuthIsReady","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.cf58db50.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBfmjBZFzS7o2g2u5FbNc68hVmLhpmyMHk\",\r\n    authDomain: \"employees-7af07.firebaseapp.com\",\r\n    databaseURL: \"https://employees-7af07.firebaseio.com\",\r\n    projectId: \"employees-7af07\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"116693076677\",\r\n    appId: \"1:116693076677:web:8d2364dc4a3ce034\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore();\r\n\r\nexport default firebase;\r\n","const initState = {\r\n    authError: null,\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error')\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGN_SUCCESS':\r\n            console.log('signout success')\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success')\r\n            return {\r\n                ...state,\r\n                authError: null,\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error')\r\n            return {\r\n                ...state,\r\n                authError: action.error.message,\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","const initState = {\r\n    employees: []\r\n};\r\n\r\nconst employeeReducer = (state = initState, action) => {\r\n    switch(action.type) {\r\n        case 'CREATE_EMPLOYEE':\r\n            return state;\r\n        case 'CREATE_EMPLOYEE_ERROR':\r\n            return action.payload;\r\n        case 'UPDATE_EMPLOYEE':\r\n            return state;\r\n        case 'UPDATE_EMPLOYEE_ERROR':\r\n            return  action.payload;\r\n        case 'DELETE_EMPLOYEE':\r\n            return state;\r\n        case 'DELETE_EMPLOYEE_ERROR':\r\n            return  action.payload;\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default employeeReducer;\r\n","import { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport authReducer from 'reducers/authReducer';\r\nimport employeeReducer from 'reducers/employeeReducer';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    employees: employeeReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer,\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({ component: Component, auth,  ...rest}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={() => {\r\n                if(!auth.uid) {\r\n                    return <Redirect to='/signIn'/>\r\n                } else {\r\n                    return <Component />\r\n                }\r\n                \r\n            }}\r\n        />\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from 'actions/authActions';\r\n\r\nconst SignedInLinks = (props) => {\r\n    const { profile } = props;\r\n    \r\n    return (\r\n        <ul className=\"menu\">\r\n            <li className=\"menu__item\">\r\n                <NavLink to=\"/employees/create\" className=\"link link--light\">Create employee</NavLink>\r\n            </li>\r\n            <li className=\"menu__item\">\r\n                <NavLink onClick={props.signOut} to='/employees' className=\"link link--light\">Log out</NavLink>\r\n            </li>\r\n            <li className=\"menu__item\">\r\n                <NavLink to='/employees' className=\"link user-initials\">{profile.initials}</NavLink>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.firebase.profile,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignedInLinks);","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nexport const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        return firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        )\r\n        .then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' })\r\n        })\r\n        .catch((error) => {\r\n            dispatch({ type: 'LOGIN_ERROR', error})\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        firebase.auth().signOut(\r\n        ).then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password,\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                name: newUser.name,\r\n                surname: newUser.surname,\r\n                initials: newUser.name[0] + newUser.surname[0],\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' })\r\n        }).catch((error) => {\r\n            dispatch({ type: 'SIGNUP_ERROR', error })\r\n        });\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"menu\">\r\n            <li className=\"menu__item\">\r\n                <NavLink className=\"link link--light\" to=\"/signUp\">Sign Up</NavLink>\r\n            </li>\r\n            <li className=\"menu__item\">\r\n                <NavLink className=\"link link--light\" to=\"/signIn\">Log in</NavLink>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport SignedInLinks from './signedInLinks.js';\r\nimport SignedOutLinks from './signedOutLinks.js';\r\nimport './style.scss';\r\n\r\nconst Navigation = (props) => {\r\n    const { auth } = props;\r\n    const links = auth.uid ? <SignedInLinks /> : <SignedOutLinks />;\r\n    return (\r\n        <nav className=\"\">\r\n            <div className=\"navigation container\">\r\n                <NavLink to=\"/employees\" className=\"logo link\">Employees</NavLink>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navigation);","import React, {Component} from \"react\";\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nexport default class FieldMariedRender extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            maried: this.valueMaried()\r\n        };\r\n    }\r\n\r\n    valueMaried() {\r\n        const divStyle = {\r\n            display:\"flex\", \r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n        }\r\n        if (this.props.value) {\r\n            return <div style={divStyle}><Icon color=\"primary\">check</Icon></div>\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.state.maried\r\n        );\r\n    }\r\n};","import React from \"react\";\r\nimport { format} from 'date-fns';\r\n\r\nconst FieldBirthdayRender = function(params) {\r\n    return <span>{format(params.value.toDate(), 'dd.MM.yyyy')}</span>;\r\n}\r\nexport default FieldBirthdayRender;","import React from \"react\";\r\n\r\nconst FieldSalaryRender = function(params) {\r\n    return <span>{params.value + '$'}</span>;\r\n}\r\nexport default FieldSalaryRender;","import React from 'react';\r\nimport { format, formatDistanceToNow } from 'date-fns';\r\n\r\nconst FieldExperienceRender = function(params) {\r\n    const formatedDate = format(params.value.toDate(), 'yyyy, MM, dd');\r\n    return <span>{formatDistanceToNow(new Date(formatedDate))}</span>;\r\n};\r\n\r\nexport default FieldExperienceRender;\r\n","import iziToast from 'izitoast';\r\n\r\nexport const notification = {\r\n    success(message) {\r\n        iziToast.success({\r\n            title: 'OK',\r\n            message: message,\r\n        });\r\n    },\r\n    error(message) {\r\n        iziToast.error({\r\n            title: 'Error',\r\n            message: message,\r\n        });\r\n    },\r\n}","import { notification } from 'components/notification';\r\n\r\nexport const createEmployee = (employee) => {\r\n    return (dispatch, getState, { getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n\r\n        firestore.collection('employees').add({\r\n            ...employee,\r\n            name: employee.name,\r\n            surname: employee.surname,\r\n            birthday: employee.birthday,\r\n            createdBy: profile.name + ' ' + profile.surname,\r\n        })\r\n            .then(()=> {\r\n                dispatch({\r\n                    type: 'CREATE_EMPLOYEE',\r\n                    employee,\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                dispatch( {type: 'CREATE_EMPLOYEE_ERROR', error})\r\n            });\r\n    }\r\n}\r\n\r\nexport const updateEmployee = (employee, id) => {\r\n    return (dispatch, getState, { getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n\r\n        firestore.collection('employees').doc(id).update({\r\n            ...employee,\r\n            name: employee.name,\r\n            surname: employee.surname,\r\n            birthday: employee.birthday,\r\n            createdBy: profile.name + ' ' + profile.surname,\r\n        })\r\n            .then(()=> {\r\n                dispatch({\r\n                    type: 'UPDATE_EMPLOYEE',\r\n                    employee,\r\n                });\r\n        })\r\n            .catch((error) => {\r\n                dispatch( {type: 'UPDATE_EMPLOYEE_ERROR', error});\r\n            });\r\n        \r\n    }\r\n}\r\n\r\nexport const removeEmployee = (id) => {\r\n    return (dispatch, getState, { getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        firestore.collection('employees').doc(id).delete()\r\n            .then(()=> {\r\n                dispatch({\r\n                    type: 'DELETE_EMPLOYEE',\r\n                });\r\n                notification.success('This employee was deleted');\r\n            })\r\n            .catch((error) => {\r\n                dispatch( {type: 'DELETE_EMPLOYEE_ERROR', error});\r\n                notification.error('This employee was not deleted');\r\n            });\r\n    }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport { removeEmployee } from 'actions/employeeActions'; \r\nimport './style.scss';\r\n\r\nclass FieldToolsRender extends Component {\r\n    handleClear = () => {\r\n        const { data: { id } } = this.props;\r\n        this.props.removeEmployee(id);\r\n    }\r\n\r\n    render() {\r\n        const { data } = this.props;\r\n\r\n        return (\r\n            <div className=\"table-tools\">\r\n                <NavLink \r\n                    to={'/employees/update/' + data.id}\r\n                    className=\"link table-tools__item table-tools__link\" >\r\n                    <div className=\"table-tools__item\">\r\n                        <Icon color=\"primary\" className=\"icon\">edit</Icon>\r\n                        EDIT\r\n                    </div>\r\n                </NavLink>\r\n                <Button \r\n                    color=\"primary\" \r\n                    size=\"small\"\r\n                    onClick={this.handleClear}\r\n                    className=\"table-tools__item\"\r\n                >\r\n                    <Icon color=\"primary\" className=\"icon\">clear</Icon>\r\n                    Remove\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeEmployee: (id) => dispatch(removeEmployee(id))\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps,\r\n    null,\r\n    { forwardRef: true },\r\n)(FieldToolsRender);\r\n","import FieldMariedRender from 'components/employeesList/fieldMariedRender';\r\nimport FieldBirthdayRender from 'components/employeesList/fieldBirthdayRender';\r\nimport FieldSalaryRender from 'components/employeesList/fieldSalaryRender';\r\nimport FieldExperienceRender from 'components/employeesList/fieldExperienceRender';\r\nimport FieldToolsRender from 'components/employeesList/fieldToolsRender';\r\n\r\nconst columnDefs = [\r\n    {\r\n        headerName: \"Name\", field: \"name\", sortable: true, filter: true, resizable: true,\r\n    },\r\n    {\r\n        headerName: \"Surname\", field: \"surname\", sortable: true, filter: true,\r\n    },\r\n    {\r\n        headerName: \"Profession\", field: \"profession\", sortable: true, filter: true,\r\n    },\r\n    {\r\n        headerName: \"Experience\", field: \"dateOfEmployment\", cellRendererFramework: FieldExperienceRender, sortable: true, filter: true, resizable: true,\r\n    },\r\n    {\r\n        headerName: \"Salary\", field: \"salary\", cellRendererFramework: FieldSalaryRender, sortable: true, filter: true, resizable: true,\r\n    },\r\n    {\r\n        headerName: \"Birthday\", field: \"birthday\", cellRendererFramework: FieldBirthdayRender, sortable: true, filter: true, resizable: true,\r\n    },\r\n    {\r\n        headerName: \"Maried\", field: \"maried\", cellRendererFramework: FieldMariedRender, sortable: true, filter: true, resizable: true,\r\n    },\r\n    {\r\n        headerName: \"\", cellRendererFramework: FieldToolsRender, resizable: true,\r\n    }\r\n];\r\n\r\nexport default columnDefs;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport columnDefs from 'const/columnDefs';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\r\nimport './style.scss';\r\n\r\nclass EmployeesList extends Component {\r\n    render() {\r\n        const { employees } = this.props;\r\n        return (\r\n            <div className=\"employees container\">\r\n                <div\r\n                    className=\"ag-theme-balham\"\r\n                    style={{ width: '100%', height: '100px'}}\r\n                >\r\n                    <AgGridReact\r\n                        reactNext\r\n                        onGridReady={(params) => {\r\n                            params.api.sizeColumnsToFit();\r\n                            params.api.setGridAutoHeight(' ');\r\n                        }}\r\n                        columnDefs={columnDefs}\r\n                        rowData={employees}\r\n                    >\r\n                    </AgGridReact>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        employees: state.firestore.ordered.employees,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'employees' }\r\n    ])\r\n)(EmployeesList);\r\n","import * as Yup from 'yup';\r\n\r\nexport const validationSchemaSignIn = Yup.object().shape({\r\n    email: Yup.string()\r\n        .email(\"Must enter a email\")\r\n        .required(\"Must enter a email\"),\r\n    password: Yup.string()\r\n        .min(8, \"Must have a min 8 character\")\r\n        .required(\"Must enter a password\"),\r\n});\r\n\r\nexport const validationSchemaSignUp = Yup.object().shape({\r\n    name: Yup.string()\r\n        .min(1, \"Must have a character\")\r\n        .max(255, \"Must be shorter than 255\")\r\n        .required(\"Must enter a name\"),\r\n    surname: Yup.string()\r\n        .min(1, \"Must have a character\")\r\n        .max(255, \"Must be shorter than 255\")\r\n        .required(\"Must enter a surnname\"),\r\n    email: Yup.string()\r\n        .email(\"Must enter a email\")\r\n        .required(\"Must enter a email\"),\r\n    password: Yup.string()\r\n        .min(8, \"Must have a min 8 character\")\r\n        .required(\"Must enter a password\"),\r\n});\r\n\r\nexport const validationSchemaMain = Yup.object().shape({\r\n    name: Yup.string()\r\n        .min(1, \"Must have a character\")\r\n        .max(255, \"Must be shorter than 255\")\r\n        .required(\"Must enter a name\"),\r\n    surname: Yup.string()\r\n        .min(1, \"Must have a character\")\r\n        .max(255, \"Must be shorter than 255\")\r\n        .required(\"Must enter a surnname\"),\r\n    dateOfEmployment: Yup.date()\r\n        .required(\"Must enter a date of employment\"),\r\n    salary: Yup.number()\r\n        .required(\"Must enter a salary\"),\r\n    birthday: Yup.date()\r\n        .required(\"Must enter a birthday\"),\r\n    profession:  Yup.string()\r\n        .required(\"Must enter a profession\")\r\n});","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { validationSchemaSignIn } from 'const/validationSchema';\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from 'actions/authActions';\r\nimport 'form.scss';\r\n\r\nclass SignIn extends Component {\r\n    handleSubmit = (values) => {\r\n        this.props.signIn(values);\r\n    }\r\n    \r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if (auth.uid) {\r\n            return <Redirect to='/employees'/>\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <Formik\r\n                    initialValues={{ email: '', password: ''}}\r\n                    validationSchema={validationSchemaSignIn}\r\n                    onSubmit={values => {\r\n                        console.log(values)\r\n                        this.handleSubmit(values);\r\n                    }}\r\n                >\r\n                    {\r\n                        ({ errors, touched, values }) => (\r\n                            <Form className=\"form-container\">\r\n                                <div className=\"input-field\">\r\n                                    <Field\r\n                                        name=\"email\"\r\n                                        type=\"text\"\r\n                                        render={({ field: { name, value, onChange, onBlur } }) => (\r\n                                            <div>\r\n                                                <TextField\r\n                                                    label=\"Email\"\r\n                                                    value={value}\r\n                                                    name={name}\r\n                                                    onChange={onChange}\r\n                                                    onBlur={onBlur}\r\n                                                    margin=\"normal\"\r\n                                                    className=\"input-field\"\r\n                                                />\r\n                                            </div>\r\n                                        )}\r\n                                    />\r\n                                    <ErrorMessage component=\"div\" name=\"email\" className=\"error\"color=\"red\" />\r\n                                </div>\r\n                                <div className=\"input-field\">\r\n                                    <Field\r\n                                        name=\"password\"\r\n                                        type=\"password\"\r\n                                        render={({ field: { name, value, onChange, onBlur } }) => (\r\n                                            <div>\r\n                                                <TextField\r\n                                                    type=\"password\"\r\n                                                    label=\"Password\"\r\n                                                    value={value}\r\n                                                    name={name}\r\n                                                    onChange={onChange}\r\n                                                    onBlur={onBlur}\r\n                                                    margin=\"normal\"\r\n                                                    className=\"input-field\"\r\n                                                />\r\n                                            </div>\r\n                                        )}\r\n                                    />\r\n                                    <ErrorMessage component=\"div\" name=\"password\" className=\"error\" />\r\n                                </div>\r\n                                <div className=\"input-field\">\r\n                                    <Button className=\"btn\" variant=\"contained\" type=\"submit\">Log In</Button>\r\n                                    <div>{authError ? <p>{authError}</p> : null}</div>\r\n                                </div>\r\n                            </Form>\r\n                        )\r\n                    }\r\n                </Formik>                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { validationSchemaSignUp } from 'const/validationSchema';\r\nimport { connect } from 'react-redux';\r\nimport { signUp } from 'actions/authActions';\r\n\r\nclass SignUp extends Component {\r\n    handleSubmit = (values) => {\r\n        this.props.signUp(values);\r\n    }\r\n\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if (auth.uid) {\r\n            return <Redirect to='/employees'/>\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <Formik\r\n                    initialValues={{ name: '', surname: '', email: '', password: ''}}\r\n                    validationSchema={validationSchemaSignUp}\r\n                    onSubmit={values => {\r\n                        this.handleSubmit(values);\r\n                        console.log(values)\r\n                    }}\r\n                >\r\n                    {\r\n                        () => (\r\n                            <Form className=\"form-container\">\r\n                                <div className=\"input-field\">\r\n                                    <Field\r\n                                        name=\"name\"\r\n                                        type=\"text\"\r\n                                        render={({ field: { name, value, onChange, onBlur } }) => (\r\n                                            <div>\r\n                                                <TextField\r\n                                                    label=\"Name\"\r\n                                                    value={value}\r\n                                                    name={name}\r\n                                                    onChange={onChange}\r\n                                                    onBlur={onBlur}\r\n                                                    margin=\"normal\"\r\n                                                    className=\"input-field\"\r\n                                                />\r\n                                            </div>\r\n                                        )}\r\n                                    />\r\n                                    <ErrorMessage component=\"div\" name=\"name\" className=\"error\" />\r\n                                </div>\r\n                                <div className=\"input-field\">\r\n                                    <Field\r\n                                        name=\"surname\"\r\n                                        type=\"text\"\r\n                                        render={({ field: { name, value, onChange, onBlur } }) => (\r\n                                            <div>\r\n                                                <TextField\r\n                                                    label=\"Surname\"\r\n                                                    value={value}\r\n                                                    name={name}\r\n                                                    onChange={onChange}\r\n                                                    onBlur={onBlur}\r\n                                                    margin=\"normal\"\r\n                                                    className=\"input-field\"\r\n                                                />\r\n                                            </div>\r\n                                        )}\r\n                                    />\r\n                                    <ErrorMessage component=\"div\" name=\"surname\" className=\"error\" />\r\n                                </div>\r\n                                <div className=\"input-field\">\r\n                                    <Field\r\n                                        name=\"email\"\r\n                                        type=\"text\"\r\n                                        render={({ field: { name, value, onChange, onBlur } }) => (\r\n                                            <div>\r\n                                                <TextField\r\n                                                    label=\"Email\"\r\n                                                    value={value}\r\n                                                    name={name}\r\n                                                    onChange={onChange}\r\n                                                    onBlur={onBlur}\r\n                                                    margin=\"normal\"\r\n                                                    className=\"input-field\"\r\n                                                />\r\n                                            </div>\r\n                                        )}\r\n                                    />\r\n                                    <ErrorMessage component=\"div\" name=\"email\" className=\"error\" />\r\n                                </div>\r\n                                <div className=\"input-field\">\r\n                                    <Field\r\n                                        name=\"password\"\r\n                                        type=\"password\"\r\n                                        render={({ field: { name, value, onChange, onBlur } }) => (\r\n                                            <div>\r\n                                                <TextField\r\n                                                    type=\"password\"\r\n                                                    label=\"Password\"\r\n                                                    value={value}\r\n                                                    name={name}\r\n                                                    onChange={onChange}\r\n                                                    onBlur={onBlur}\r\n                                                    margin=\"normal\"\r\n                                                    className=\"input-field\"\r\n                                                />\r\n                                            </div>\r\n                                        )}\r\n                                    />\r\n                                    <ErrorMessage component=\"div\" name=\"password\" className=\"error\" />\r\n                                </div>\r\n                                <div className=\"input-field\">\r\n                                <Button className=\"btn\" variant=\"contained\" type=\"submit\">Sign Up</Button>\r\n                                    <div>{authError ? <p>{authError}</p> : null}</div>\r\n                                </div>\r\n                            </Form>\r\n                        )\r\n                    }\r\n                </Formik>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => {dispatch(signUp(newUser))},\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, { Component } from 'react';\r\nimport { compose } from 'redux';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport { validationSchemaMain } from 'const/validationSchema';\r\nimport { withRouter } from \"react-router\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { createEmployee, updateEmployee } from 'actions/employeeActions';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nclass EmployeeCreator extends Component {\r\n    handleSubmit = (values) => {\r\n        const { employee, employeeId, createEmployee, updateEmployee } = this.props;\r\n        if (employee) {\r\n            updateEmployee(values, employeeId);\r\n        } else {\r\n            createEmployee(values);\r\n        }\r\n        this.props.history.push('/');\r\n    }\r\n    checkAuth = () => {\r\n        const { auth } = this.props;\r\n        if (!auth.uid) {\r\n            return <Redirect to='/signIn' />;\r\n        }\r\n        return <Redirect to='/employees/create' />;\r\n    }\r\n    render() {\r\n        const { employee } = this.props;\r\n        const initialValues = employee \r\n            ? {\r\n                ...employee,\r\n                dateOfEmployment: employee.dateOfEmployment.toDate(),\r\n                birthday: employee.birthday.toDate(),\r\n            } \r\n            : { \r\n                name: '', \r\n                surname: '',\r\n                dateOfEmployment: null,\r\n                salary: '',\r\n                birthday: null,\r\n                maried: false,\r\n                profession: '',\r\n                createdBy: '',\r\n            };\r\n        const btnTitle = employee ? 'Update employee' : 'Create employee';\r\n        this.checkAuth();\r\n        return (\r\n            <div className=\"container\">\r\n                <Formik\r\n                    initialValues={initialValues}\r\n                    validationSchema={validationSchemaMain}\r\n                    onSubmit={values => {\r\n                        this.handleSubmit(values);\r\n                    }}\r\n                >\r\n                    {\r\n                        ({ errors, touched, values }) => (\r\n                            <Form className=\"form-container\">\r\n                                <div className=\"input-field\">\r\n                                    <Field\r\n                                        name=\"name\"\r\n                                        type=\"text\"\r\n                                        render={({ field: { name, value, onChange}, form } ) => (\r\n                                            <TextField\r\n                                                id=\"standard-name\"\r\n                                                label=\"Name\"\r\n                                                value={value}\r\n                                                name={name}\r\n                                                onChange={onChange}\r\n                                                margin=\"normal\"\r\n                                                className=\"input-field\"\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                    <ErrorMessage component=\"div\" name=\"name\" className=\"error\"/>\r\n                                </div>\r\n                                <div className=\"input-field\">\r\n                                    <Field\r\n                                        name=\"surname\"\r\n                                        type=\"text\"\r\n                                        render={({ field: { name, value, onChange} } ) => (\r\n                                            <div>\r\n                                                <TextField\r\n                                                    id=\"standard-name\"\r\n                                                    label=\"Surname\"\r\n                                                    value={value}\r\n                                                    name={name}\r\n                                                    onChange={onChange}\r\n                                                    margin=\"normal\"\r\n                                                    className=\"input-field\"\r\n                                                />\r\n                                            </div>\r\n                                        )}\r\n                                    />\r\n                                    <ErrorMessage component=\"div\" name=\"surname\" className=\"error\"/>\r\n                                </div>\r\n                                <div className=\"input-field\">\r\n                                    <Field\r\n                                        name=\"dateOfEmployment\"\r\n                                        render={({ field: { name, value, onChange}, form } ) => (\r\n                                            <MuiPickersUtilsProvider\r\n                                                className=\"date-field\" \r\n                                                utils={DateFnsUtils}\r\n                                            >\r\n                                                <KeyboardDatePicker\r\n                                                    autoOk\r\n                                                    variant=\"inline\"\r\n                                                    format=\"dd/MM/yyyy\"\r\n                                                    maxDate={new Date()}\r\n                                                    margin=\"normal\"\r\n                                                    label=\"Date of employment\"\r\n                                                    initialFocusedDate={new Date()}\r\n                                                    value={value}\r\n                                                    onChange={(value) => {\r\n                                                        form.setFieldValue(name, value);\r\n                                                    }}\r\n                                                    onBlur={() => {\r\n                                                        form.setFieldTouched(name, true);\r\n                                                    }}\r\n                                                    KeyboardButtonProps={{\r\n                                                        'aria-label': 'change date',\r\n                                                    }}\r\n                                                    \r\n                                                />\r\n                                            </MuiPickersUtilsProvider>\r\n                                        )}\r\n                                    />\r\n                                    <ErrorMessage component=\"div\" name=\"dateOfEmployment\" className=\"error\" />\r\n                                </div>\r\n                                <div className=\"input-field\">\r\n                                    <Field\r\n                                        name=\"salary\"\r\n                                        type=\"number\"\r\n                                        render={({ field: { name, value, onChange}, form } ) => (\r\n                                            <TextField\r\n                                                id=\"standard-name\"\r\n                                                type=\"number\"\r\n                                                label=\"Salary in dollars\"\r\n                                                value={value}\r\n                                                name={name}\r\n                                                onChange={onChange}\r\n                                                margin=\"normal\"\r\n                                                className=\"input-field\"\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                    <ErrorMessage component=\"div\" name=\"salary\" className=\"error\"/>\r\n                                </div>\r\n                                <div className=\"input-field\">\r\n                                    <Field\r\n                                        name=\"birthday\"\r\n                                        render={({ field: { name, value, onChange}, form } ) => (\r\n                                            <MuiPickersUtilsProvider\r\n                                                className=\"date-field\" \r\n                                                utils={DateFnsUtils}\r\n                                            >\r\n                                                <KeyboardDatePicker\r\n                                                    autoOk\r\n                                                    variant=\"inline\"\r\n                                                    format=\"dd/MM/yyyy\"\r\n                                                    maxDate={new Date()}\r\n                                                    margin=\"normal\"\r\n                                                    label=\"Birthday\"\r\n                                                    initialFocusedDate={new Date()}\r\n                                                    value={value}\r\n                                                    onChange={(value) => {\r\n                                                        form.setFieldValue(name, value);\r\n                                                    }}\r\n                                                    onBlur={() => {\r\n                                                        form.setFieldTouched(name, true);\r\n                                                    }}\r\n                                                    KeyboardButtonProps={{\r\n                                                        'aria-label': 'change date',\r\n                                                    }}\r\n                                                    \r\n                                                />\r\n                                            </MuiPickersUtilsProvider>\r\n                                        )}\r\n                                    />\r\n                                    <ErrorMessage component=\"div\" name=\"birthday\" className=\"error\" />\r\n                                </div>\r\n                                <div className=\"input-field\">\r\n                                    <Field \r\n                                        name=\"profession\"\r\n                                        render={({ field: { name, value, onChange} } ) => ( \r\n                                            <FormControl>\r\n                                                <Select\r\n                                                    onChange={onChange}\r\n                                                    name={name}\r\n                                                    value={value}\r\n                                                    label=\"Profession\"\r\n                                                    displayEmpty\r\n                                                    className=\"select-field\"\r\n                                                >\r\n                                                    <MenuItem value=\"\" disabled>\r\n                                                        Select profession\r\n                                                    </MenuItem>\r\n                                                    <MenuItem value={\"Accountant\"}>Accountant</MenuItem>\r\n                                                    <MenuItem value={\"Director\"}>Director</MenuItem>\r\n                                                    <MenuItem value={\"Manager\"}>Manager</MenuItem>\r\n                                                    <MenuItem value={\"Programmer\"}>Programmer</MenuItem>\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        )}\r\n                                    />\r\n                                    <ErrorMessage component=\"div\" name=\"profession\" className=\"error\" />\r\n                                </div>\r\n                                <div className=\"checkbox-field\">\r\n                                    <Field\r\n                                        name=\"maried\"\r\n                                        checked={values.maried}\r\n                                        render={({ field: { name, value, onChange} }) => (\r\n                                            <FormControlLabel\r\n                                                control={\r\n                                                    <Checkbox\r\n                                                        color=\"primary\"\r\n                                                    />\r\n                                                }\r\n                                                onChange={onChange} \r\n                                                checked={value}\r\n                                                name={name}\r\n                                                label=\"Maried\"\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </div>\r\n                                <Button className=\"btn\" variant=\"contained\" type=\"submit\">{btnTitle}</Button>\r\n                            </Form>\r\n                        )\r\n                    }\r\n                </Formik>\r\n                        \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    const { employeeId } = props;\r\n    const employees = state.firestore.data.employees;\r\n    const employee = employees && employees[employeeId];\r\n    return {\r\n        auth: state.firebase.auth,\r\n        employee: employee,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createEmployee: (employee) => dispatch(createEmployee(employee)),\r\n        updateEmployee: (employee, id) => dispatch(updateEmployee(employee, id))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([\r\n        { collection: 'employees' }\r\n    ]))(withRouter(EmployeeCreator));","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport EmployeeCreator from 'components/employeeCreator';\r\n\r\nconst EmployeeUpdater = function(props) {\r\n    const { employeeId } = props;\r\n    return <EmployeeCreator employeeId={employeeId}/>;\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    return {\r\n        employeeId: id,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(EmployeeUpdater);\r\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PrivateRoute from 'components/privateRoute';\nimport Navigation from 'components/navigation';\nimport EmployeesList from 'components/employeesList';\nimport SignIn from 'components/auth/signIn';\nimport SignUp from 'components/auth/signUp';\nimport EmployeeCreator from 'components/employeeCreator';\nimport EmployeeUpdater from 'components/employeeUpdater';\nimport './style.css';\n\nfunction App(props) {\n    return (\n        <div className=\"app\">\n            <Navigation />\n            <Switch>\n                <Route path='/signIn' component={SignIn} />\n                <Route path='/signUp' component={SignUp} />\n                <PrivateRoute exact path='/employees' component={EmployeesList} />\n                <PrivateRoute path='/employees/create' component={EmployeeCreator} />\n                <PrivateRoute path='/employees/update/:id' component={EmployeeUpdater} />\n                <Redirect to='/employees' />\n            </Switch>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n    }\n}\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter} from 'react-router-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createFirestoreInstance , getFirestore, reduxFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport firebase from 'firebase';\nimport 'firebase/database';\nimport fbConfig from 'config/fbConfig';\nimport rootReducer from 'store/reducer';\nimport './index.scss';\nimport App from './app';\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reduxFirestore(fbConfig),\n    )\n);\n\nconst rrfConfig = {\n    userProfile: 'users',\n    useFirestoreForProfile: true,\n};\n\nconst rrfProps = {\n    firebase,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance,\n    userProfile: 'users',\n    useFirestoreForProfile: true,\n    attachAuthIsReady: true,\n}\n\nReactDOM.render(\n    <Provider store={store}>\n        <ReactReduxFirebaseProvider {...rrfProps}>\n            <BrowserRouter>\n                <App />\n            </BrowserRouter>\n        </ReactReduxFirebaseProvider>\n    </Provider>, \n    document.getElementById('root'));\n\n"],"sourceRoot":""}